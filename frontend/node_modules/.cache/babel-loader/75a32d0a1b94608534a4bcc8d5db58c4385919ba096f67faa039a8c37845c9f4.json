{"ast":null,"code":"var _jsxFileName = \"/home/chiode/Projetos/trade-journal/frontend/src/pages/DashboardPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlusCircle } from 'lucide-react';\nimport { getTrades, addTrade, updateTrade, deleteTrade } from '../services/api';\nimport { Button } from '../components/ui/Button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport Modal from '../components/ui/Modal';\nimport CumulativeProfitChart from '../components/CumulativeProfitChart';\nimport TradeCard from '../components/TradeCard';\nimport TradeForm from '../components/TradeForm';\nimport TradeDetailsModal from '../components/TradeDetailsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardPage = () => {\n  _s();\n  const [trades, setTrades] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedTrade, setSelectedTrade] = useState(null);\n  const [isDetailsModalOpen, setIsDetailsModalOpen] = useState(false);\n  const [startInEditMode, setStartInEditMode] = useState(false);\n  useEffect(() => {\n    loadTrades();\n  }, []);\n  const loadTrades = async () => {\n    try {\n      const response = await getTrades();\n      setTrades(response.data);\n    } catch (error) {\n      console.error(\"Failed to load trades:\", error);\n    }\n  };\n  const handleAddTrade = async tradeData => {\n    try {\n      // Calcular o resultado automaticamente se ambos os preços estiverem definidos\n      let resultado = 0;\n      if (tradeData.preco_entrada && tradeData.preco_saida && tradeData.quantidade) {\n        const entrada = parseFloat(tradeData.preco_entrada);\n        const saida = parseFloat(tradeData.preco_saida);\n        const quantidade = parseFloat(tradeData.quantidade);\n        if (tradeData.tipo === 'Compra') {\n          resultado = (saida - entrada) * quantidade;\n        } else {\n          resultado = (entrada - saida) * quantidade;\n        }\n      }\n      const tradeWithResult = {\n        ...tradeData,\n        resultado\n      };\n      await addTrade(tradeWithResult);\n      setIsModalOpen(false);\n      loadTrades(); // Recarregar a lista de trades\n    } catch (error) {\n      console.error(\"Erro ao adicionar trade:\", error);\n      throw error;\n    }\n  };\n  const handleUpdateTrade = async (tradeId, tradeData) => {\n    try {\n      // Calcular o resultado automaticamente se ambos os preços estiverem definidos\n      let resultado = 0;\n      if (tradeData.preco_entrada && tradeData.preco_saida && tradeData.quantidade) {\n        const entrada = parseFloat(tradeData.preco_entrada);\n        const saida = parseFloat(tradeData.preco_saida);\n        const quantidade = parseFloat(tradeData.quantidade);\n        if (tradeData.tipo === 'Compra') {\n          resultado = (saida - entrada) * quantidade;\n        } else {\n          resultado = (entrada - saida) * quantidade;\n        }\n      }\n      const tradeWithResult = {\n        ...tradeData,\n        resultado\n      };\n      await updateTrade(tradeId, tradeWithResult);\n      // O modal de detalhes/edição agora se fecha sozinho\n      loadTrades(); // Recarregar a lista de trades\n    } catch (error) {\n      console.error(\"Erro ao atualizar trade:\", error);\n      throw error;\n    }\n  };\n  const handleDeleteTrade = async tradeId => {\n    try {\n      await deleteTrade(tradeId);\n      setIsDetailsModalOpen(false);\n      loadTrades(); // Recarregar a lista de trades\n    } catch (error) {\n      console.error(\"Erro ao excluir trade:\", error);\n      throw error;\n    }\n  };\n  const handleTradeClick = trade => {\n    setSelectedTrade(trade);\n    setStartInEditMode(false);\n    setIsDetailsModalOpen(true);\n  };\n  const handleAddExitPrice = trade => {\n    setSelectedTrade(trade);\n    setStartInEditMode(true);\n    setIsDetailsModalOpen(true);\n  };\n  const totalProfit = trades.reduce((acc, trade) => acc + (Number(trade.resultado) || 0), 0);\n  const totalTrades = trades.length;\n  const winRate = totalTrades > 0 ? trades.filter(t => {\n    var _t$resultado;\n    return ((_t$resultado = t.resultado) !== null && _t$resultado !== void 0 ? _t$resultado : 0) > 0;\n  }).length / totalTrades * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"sticky top-0 z-10 flex items-center justify-between h-14 sm:h-16 px-3 sm:px-4 md:px-6 border-b shrink-0 bg-background\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-base sm:text-lg font-semibold truncate\",\n        children: \"Trade Journal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setIsModalOpen(true),\n        size: \"sm\",\n        className: \"sm:size-default\",\n        children: [/*#__PURE__*/_jsxDEV(PlusCircle, {\n          className: \"w-4 h-4 sm:mr-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hidden sm:inline\",\n          children: \"Novo Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sm:hidden\",\n          children: \"Novo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex-1 overflow-auto p-3 sm:p-4 md:p-6 lg:p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-3 sm:gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 mb-6 sm:mb-8\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: \"flex flex-row items-center justify-between pb-2 space-y-0\",\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"text-xs sm:text-sm font-medium\",\n              children: \"Lucro Total\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `text-lg sm:text-2xl font-bold ${totalProfit >= 0 ? 'text-green-500' : 'text-red-500'}`,\n              children: [\"R$ \", totalProfit.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: \"flex flex-row items-center justify-between pb-2 space-y-0\",\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"text-xs sm:text-sm font-medium\",\n              children: \"Taxa de Acerto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg sm:text-2xl font-bold\",\n              children: [winRate.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"sm:col-span-2 lg:col-span-1\",\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: \"flex flex-row items-center justify-between pb-2 space-y-0\",\n            children: /*#__PURE__*/_jsxDEV(CardTitle, {\n              className: \"text-xs sm:text-sm font-medium\",\n              children: \"Total de Trades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg sm:text-2xl font-bold\",\n              children: totalTrades\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid gap-6 sm:gap-8 grid-cols-1 xl:grid-cols-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-2 xl:order-1\",\n          children: /*#__PURE__*/_jsxDEV(CumulativeProfitChart, {\n            trades: trades\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-1 xl:order-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mb-3 sm:mb-4 text-xl sm:text-2xl font-bold\",\n            children: \"Hist\\xF3rico de Trades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"max-h-[520px] sm:max-h-[580px] overflow-y-auto pr-1 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid gap-3 sm:gap-4 grid-cols-1 sm:grid-cols-2 xl:grid-cols-1 2xl:grid-cols-2\",\n              children: trades.length > 0 ? trades.map(trade => /*#__PURE__*/_jsxDEV(TradeCard, {\n                trade: trade,\n                onClick: handleTradeClick,\n                onAddExitPrice: handleAddExitPrice\n              }, trade.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-span-full text-center py-8 text-gray-500\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Nenhum trade encontrado.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm mt-1\",\n                  children: \"Clique em \\\"Novo Trade\\\" para come\\xE7ar.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      title: \"Adicionar Novo Trade\",\n      children: /*#__PURE__*/_jsxDEV(TradeForm, {\n        onAddTrade: handleAddTrade,\n        onCancel: () => setIsModalOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TradeDetailsModal, {\n      isOpen: isDetailsModalOpen,\n      onClose: () => setIsDetailsModalOpen(false),\n      trade: selectedTrade,\n      onUpdateTrade: handleUpdateTrade,\n      onDeleteTrade: handleDeleteTrade,\n      startInEditMode: startInEditMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this);\n};\n_s(DashboardPage, \"oI07FZKeIRCfLJ6cHL1HRMaCKTc=\");\n_c = DashboardPage;\nexport default DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","PlusCircle","getTrades","addTrade","updateTrade","deleteTrade","Button","Card","CardContent","CardHeader","CardTitle","Modal","CumulativeProfitChart","TradeCard","TradeForm","TradeDetailsModal","jsxDEV","_jsxDEV","DashboardPage","_s","trades","setTrades","isModalOpen","setIsModalOpen","selectedTrade","setSelectedTrade","isDetailsModalOpen","setIsDetailsModalOpen","startInEditMode","setStartInEditMode","loadTrades","response","data","error","console","handleAddTrade","tradeData","resultado","preco_entrada","preco_saida","quantidade","entrada","parseFloat","saida","tipo","tradeWithResult","handleUpdateTrade","tradeId","handleDeleteTrade","handleTradeClick","trade","handleAddExitPrice","totalProfit","reduce","acc","Number","totalTrades","length","winRate","filter","t","_t$resultado","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","toFixed","map","onAddExitPrice","id","isOpen","onClose","title","onAddTrade","onCancel","onUpdateTrade","onDeleteTrade","_c","$RefreshReg$"],"sources":["/home/chiode/Projetos/trade-journal/frontend/src/pages/DashboardPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PlusCircle } from 'lucide-react';\nimport { getTrades, addTrade, updateTrade, deleteTrade } from '../services/api';\nimport { Button } from '../components/ui/Button';\nimport { Card, CardContent, CardHeader, CardTitle } from '../components/ui/Card';\nimport Modal from '../components/ui/Modal';\nimport CumulativeProfitChart from '../components/CumulativeProfitChart';\nimport TradeCard from '../components/TradeCard';\nimport TradeForm from '../components/TradeForm';\nimport TradeDetailsModal from '../components/TradeDetailsModal';\nimport { Trade } from '../types/trade';\n\nconst DashboardPage: React.FC = () => {\n    const [trades, setTrades] = useState<Trade[]>([]);\n    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n    const [selectedTrade, setSelectedTrade] = useState<Trade | null>(null);\n    const [isDetailsModalOpen, setIsDetailsModalOpen] = useState<boolean>(false);\n    const [startInEditMode, setStartInEditMode] = useState<boolean>(false);\n\n    useEffect(() => {\n        loadTrades();\n    }, []);\n\n    const loadTrades = async () => {\n        try {\n            const response = await getTrades();\n            setTrades(response.data);\n        } catch (error) {\n            console.error(\"Failed to load trades:\", error);\n        }\n    };\n\n    const handleAddTrade = async (tradeData: Trade) => {\n        try {\n            // Calcular o resultado automaticamente se ambos os preços estiverem definidos\n            let resultado = 0;\n            if (tradeData.preco_entrada && tradeData.preco_saida && tradeData.quantidade) {\n                const entrada = parseFloat(tradeData.preco_entrada);\n                const saida = parseFloat(tradeData.preco_saida);\n                const quantidade = parseFloat(tradeData.quantidade);\n                \n                if (tradeData.tipo === 'Compra') {\n                    resultado = (saida - entrada) * quantidade;\n                } else {\n                    resultado = (entrada - saida) * quantidade;\n                }\n            }\n\n            const tradeWithResult = {\n                ...tradeData,\n                resultado\n            };\n\n            await addTrade(tradeWithResult);\n            setIsModalOpen(false);\n            loadTrades(); // Recarregar a lista de trades\n        } catch (error) {\n            console.error(\"Erro ao adicionar trade:\", error);\n            throw error;\n        }\n    };\n\n    const handleUpdateTrade = async (tradeId: number, tradeData: Trade) => {\n        try {\n            // Calcular o resultado automaticamente se ambos os preços estiverem definidos\n            let resultado = 0;\n            if (tradeData.preco_entrada && tradeData.preco_saida && tradeData.quantidade) {\n                const entrada = parseFloat(tradeData.preco_entrada);\n                const saida = parseFloat(tradeData.preco_saida);\n                const quantidade = parseFloat(tradeData.quantidade);\n                \n                if (tradeData.tipo === 'Compra') {\n                    resultado = (saida - entrada) * quantidade;\n                } else {\n                    resultado = (entrada - saida) * quantidade;\n                }\n            }\n\n            const tradeWithResult = {\n                ...tradeData,\n                resultado\n            };\n\n            await updateTrade(tradeId, tradeWithResult);\n            // O modal de detalhes/edição agora se fecha sozinho\n            loadTrades(); // Recarregar a lista de trades\n        } catch (error) {\n            console.error(\"Erro ao atualizar trade:\", error);\n            throw error;\n        }\n    };\n\n    const handleDeleteTrade = async (tradeId: number) => {\n        try {\n            await deleteTrade(tradeId);\n            setIsDetailsModalOpen(false);\n            loadTrades(); // Recarregar a lista de trades\n        } catch (error) {\n            console.error(\"Erro ao excluir trade:\", error);\n            throw error;\n        }\n    };\n\n    const handleTradeClick = (trade: Trade) => {\n        setSelectedTrade(trade);\n        setStartInEditMode(false);\n        setIsDetailsModalOpen(true);\n    };\n\n    const handleAddExitPrice = (trade: Trade) => {\n        setSelectedTrade(trade);\n        setStartInEditMode(true);\n        setIsDetailsModalOpen(true);\n    };\n\n    const totalProfit = trades.reduce((acc, trade) => acc + (Number(trade.resultado) || 0), 0);\n    const totalTrades = trades.length;\n    const winRate = totalTrades > 0 ? (trades.filter(t => (t.resultado ?? 0) > 0).length / totalTrades) * 100 : 0;\n\n    return (\n        <div className=\"flex flex-col min-h-screen\">\n            {/* Header responsivo */}\n            <header className=\"sticky top-0 z-10 flex items-center justify-between h-14 sm:h-16 px-3 sm:px-4 md:px-6 border-b shrink-0 bg-background\">\n                <h1 className=\"text-base sm:text-lg font-semibold truncate\">Trade Journal</h1>\n                <Button \n                    onClick={() => setIsModalOpen(true)}\n                    size=\"sm\"\n                    className=\"sm:size-default\"\n                >\n                    <PlusCircle className=\"w-4 h-4 sm:mr-2\" />\n                    <span className=\"hidden sm:inline\">Novo Trade</span>\n                    <span className=\"sm:hidden\">Novo</span>\n                </Button>\n            </header>\n\n            <main className=\"flex-1 overflow-auto p-3 sm:p-4 md:p-6 lg:p-8\">\n                {/* Cards de estatísticas responsivos */}\n                <div className=\"grid gap-3 sm:gap-4 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 mb-6 sm:mb-8\">\n                    <Card>\n                        <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n                            <CardTitle className=\"text-xs sm:text-sm font-medium\">Lucro Total</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className={`text-lg sm:text-2xl font-bold ${totalProfit >= 0 ? 'text-green-500' : 'text-red-500'}`}>\n                                R$ {totalProfit.toFixed(2)}\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <Card>\n                        <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n                            <CardTitle className=\"text-xs sm:text-sm font-medium\">Taxa de Acerto</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"text-lg sm:text-2xl font-bold\">{winRate.toFixed(1)}%</div>\n                        </CardContent>\n                    </Card>\n                    <Card className=\"sm:col-span-2 lg:col-span-1\">\n                        <CardHeader className=\"flex flex-row items-center justify-between pb-2 space-y-0\">\n                            <CardTitle className=\"text-xs sm:text-sm font-medium\">Total de Trades</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                            <div className=\"text-lg sm:text-2xl font-bold\">{totalTrades}</div>\n                        </CardContent>\n                    </Card>\n                </div>\n\n                {/* Layout principal responsivo */}\n                <div className=\"grid gap-6 sm:gap-8 grid-cols-1 xl:grid-cols-2\">\n                    {/* Gráfico */}\n                    <div className=\"order-2 xl:order-1\">\n                        <CumulativeProfitChart trades={trades} />\n                    </div>\n\n                    {/* Histórico de trades */}\n                    <div className=\"order-1 xl:order-2\">\n                        <h2 className=\"mb-3 sm:mb-4 text-xl sm:text-2xl font-bold\">Histórico de Trades</h2>\n                        <div className=\"max-h-[520px] sm:max-h-[580px] overflow-y-auto pr-1 scrollbar-thin scrollbar-thumb-gray-300 scrollbar-track-gray-100\">\n                            <div className=\"grid gap-3 sm:gap-4 grid-cols-1 sm:grid-cols-2 xl:grid-cols-1 2xl:grid-cols-2\">\n                                {trades.length > 0 ? (\n                                    trades.map(trade => (\n                                        <TradeCard \n                                            key={trade.id} \n                                            trade={trade} \n                                            onClick={handleTradeClick}\n                                            onAddExitPrice={handleAddExitPrice}\n                                        />\n                                    ))\n                                ) : (\n                                    <div className=\"col-span-full text-center py-8 text-gray-500\">\n                                        <p>Nenhum trade encontrado.</p>\n                                        <p className=\"text-sm mt-1\">Clique em \"Novo Trade\" para começar.</p>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n\n            {/* Modal para adicionar novo trade */}\n            <Modal\n                isOpen={isModalOpen}\n                onClose={() => setIsModalOpen(false)}\n                title=\"Adicionar Novo Trade\"\n            >\n                <TradeForm\n                    onAddTrade={handleAddTrade}\n                    onCancel={() => setIsModalOpen(false)}\n                />\n            </Modal>\n\n            {/* Modal para detalhes/edição do trade */}\n            <TradeDetailsModal\n                isOpen={isDetailsModalOpen}\n                onClose={() => setIsDetailsModalOpen(false)}\n                trade={selectedTrade}\n                onUpdateTrade={handleUpdateTrade}\n                onDeleteTrade={handleDeleteTrade}\n                startInEditMode={startInEditMode}\n            />\n        </div>\n    );\n};\n\nexport default DashboardPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}