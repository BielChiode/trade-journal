{"ast":null,"code":"var _jsxFileName = \"/home/chiode/Projetos/trade-journal/frontend/src/components/CumulativeProfitChart.jsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst CumulativeProfitChart = ({\n  trades\n}) => {\n  const sortedTrades = [...trades].sort((a, b) => new Date(a.data_saida) - new Date(b.data_saida));\n  let cumulativeProfit = 0;\n  const chartData = {\n    labels: ['Início'],\n    datasets: [{\n      label: 'Lucro Acumulado',\n      data: [0],\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  sortedTrades.forEach((trade, index) => {\n    if (trade.resultado) {\n      cumulativeProfit += parseFloat(trade.resultado);\n      chartData.labels.push(`Trade ${index + 1}`);\n      chartData.datasets[0].data.push(cumulativeProfit);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gr\\xE1fico de Lucro Acumulado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_c = CumulativeProfitChart;\nexport default CumulativeProfitChart;\nvar _c;\n$RefreshReg$(_c, \"CumulativeProfitChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","CumulativeProfitChart","trades","sortedTrades","sort","a","b","Date","data_saida","cumulativeProfit","chartData","labels","datasets","label","data","fill","borderColor","tension","forEach","trade","index","resultado","parseFloat","push","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/chiode/Projetos/trade-journal/frontend/src/components/CumulativeProfitChart.jsx"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst CumulativeProfitChart = ({ trades }) => {\n    const sortedTrades = [...trades].sort((a, b) => new Date(a.data_saida) - new Date(b.data_saida));\n    \n    let cumulativeProfit = 0;\n    const chartData = {\n        labels: ['Início'],\n        datasets: [\n            {\n                label: 'Lucro Acumulado',\n                data: [0],\n                fill: false,\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1,\n            },\n        ],\n    };\n\n    sortedTrades.forEach((trade, index) => {\n        if (trade.resultado) {\n            cumulativeProfit += parseFloat(trade.resultado);\n            chartData.labels.push(`Trade ${index + 1}`);\n            chartData.datasets[0].data.push(cumulativeProfit);\n        }\n    });\n\n    return (\n        <div>\n            <h2>Gráfico de Lucro Acumulado</h2>\n            <Line data={chartData} />\n        </div>\n    );\n};\n\nexport default CumulativeProfitChart; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElBT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMI,qBAAqB,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAC1C,MAAMC,YAAY,GAAG,CAAC,GAAGD,MAAM,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAIC,IAAI,CAACF,CAAC,CAACG,UAAU,CAAC,GAAG,IAAID,IAAI,CAACD,CAAC,CAACE,UAAU,CAAC,CAAC;EAEhG,IAAIC,gBAAgB,GAAG,CAAC;EACxB,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAE,CAAC,QAAQ,CAAC;IAClBC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,iBAAiB;MACxBC,IAAI,EAAE,CAAC,CAAC,CAAC;MACTC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACb,CAAC;EAET,CAAC;EAEDd,YAAY,CAACe,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;IACnC,IAAID,KAAK,CAACE,SAAS,EAAE;MACjBZ,gBAAgB,IAAIa,UAAU,CAACH,KAAK,CAACE,SAAS,CAAC;MAC/CX,SAAS,CAACC,MAAM,CAACY,IAAI,CAAC,SAASH,KAAK,GAAG,CAAC,EAAE,CAAC;MAC3CV,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAACS,IAAI,CAACd,gBAAgB,CAAC;IACrD;EACJ,CAAC,CAAC;EAEF,oBACIV,OAAA;IAAAyB,QAAA,gBACIzB,OAAA;MAAAyB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnC7B,OAAA,CAACX,IAAI;MAAC0B,IAAI,EAAEJ;IAAU;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxB,CAAC;AAEd,CAAC;AAACC,EAAA,GA/BI5B,qBAAqB;AAiC3B,eAAeA,qBAAqB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}